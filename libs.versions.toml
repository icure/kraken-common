[versions]
springBoot = "3.3.11"
springSecurity = "6.3.4"
springFramework = "6.1.14"
springSession = "3.3.3"
jackson = "2.17.2"
caffeine = "3.1.8"
kotlinx = "1.8.1"
kotest = "4.4.3"
hibernateValidator = "8.0.1.Final"
kmap = "0.1.79-gda7c33c594"
bouncyCastle = "1.70"
jwt = "0.11.5"
kotlin = "1.9.25"
ksp = "1.9.25-1.0.20"

[libraries]
springBootWebflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux", version.ref = "springBoot" }
springBootSecurity = { group = "org.springframework.boot", name = "spring-boot-starter-security", version.ref = "springBoot"  }
springBootActuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator", version.ref = "springBoot"  }
springBootCache = { group = "org.springframework.boot", name = "spring-boot-starter-cache", version.ref = "springBoot"  }
springBootOauth2 = { group = "org.springframework.boot", name = "spring-boot-starter-oauth2-client", version.ref = "springBoot" }
springAspects = { group = "org.springframework", name = "spring-aspects", version.ref = "springFramework" }
springWebsocket = { group = "org.springframework", name = "spring-websocket", version.ref = "springFramework" }
springMessaging = { group = "org.springframework", name = "spring-messaging", version.ref = "springFramework" }
springSecurityMessaging = { group = "org.springframework.security", name = "spring-security-messaging", version.ref = "springSecurity" }
springSession = { group = "org.springframework.session", name = "spring-session-core", version.ref = "springSession" }
jacksonKotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin", version.ref = "jackson" }
jacksonDatabind = { group = "com.fasterxml.jackson.core", name = "jackson-databind", version.ref = "jackson" }
jacksonSmile = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-smile", version.ref = "jackson" }
jacksonJsr310 = { group = "com.fasterxml.jackson.datatype", name = "jackson-datatype-jsr310", version.ref = "jackson" }
kotlinxCoroutinesCore = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx" }
kotlinxCoroutinesJdk8 = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-jdk8", version.ref = "kotlinx" }
kotlinxCoroutinesCoreJvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core-jvm", version.ref = "kotlinx" }
kotlinxCoroutinesReactive = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactive", version.ref = "kotlinx" }
kotlinxCoroutinesReactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx" }
kotlinxCoroutinesTest = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx" }
kotlinxCollectionsImmutableJvm = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable-jvm", version = "0.3.8" }
kotestAssertionsCore = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
kotestRunnerJunit5 = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest" }
kotestExtensionsSpring = { group = "io.kotest.extensions", name = "kotest-extensions-spring", version = "1.0.1" }
jupiter = { group = "org.junit.jupiter", name = "junit-jupiter" }
springBootTest = { group = "org.springframework.boot", name = "spring-boot-starter-test", version.ref = "springBoot" }
mockk = { group = "io.mockk", name = "mockk", version = "1.13.8" }
springmockk = { group = "com.ninja-squad", name = "springmockk", version = "4.0.2" }
jakartaServlet = { group = "jakarta.servlet", name = "jakarta.servlet-api", version = "6.0.0" }
hibernateValidator = { group = "org.hibernate.validator", name = "hibernate-validator" }
hibernateValidatorAnnotationProcessor = { group = "org.hibernate.validator", name = "hibernate-validator-annotation-processor", version.ref = "hibernateValidator" }
hibernateValidatorCdi = { group = "org.hibernate.validator", name = "hibernate-validator-cdi", version.ref = "hibernateValidator" }
krouch = { group = "org.taktik.couchdb", name = "krouch", version = "1.2.63-ga535880142" }
asyncJacksonHttpClient = { group = "io.icure", name = "async-jackson-http-client", version = "0.2.20-gb1dbc02f34" }
mapperProcessor = { group = "io.icure", name = "mapper-processor", version = "0.1.1-32d45af2a6" }
guava = { group = "com.google.guava", name = "guava", version = "31.1-jre" }
commonsBeanUtils = { group = "commons-beanutils", name = "commons-beanutils", version = "1.9.4" }
commonsIO = { group = "commons-io", name = "commons-io", version = "2.11.0" }
apacheCommonsLang3 = { group = "org.apache.commons", name = "commons-lang3", version = "3.13.0" }
apacheCommonsCompress = { group = "org.apache.commons", name = "commons-compress", version = "1.21" }
apacheCommonsMath3 = { group = "org.apache.commons", name = "commons-math3", version = "3.6.1" }
apacheCommonsText = { group = "org.apache.commons", name = "commons-text", version = "1.12.0" }
taktikCommons = { group = "org.taktik.commons", name = "commons-uti", version = "1.0" }
gcpAuthProvider = { group = "com.icure", name = "icure-gcp_auth_provider", version = "1.0.13-gb7ba77828a" }
taktikBoot = { group = "com.taktik.boot", name = "spring-boot-starter-gke-logging", version = "2.1.179-2746294715" }
activation = { group = "javax.activation", name = "activation", version = "1.1.1" }
springdocWebflux = { group = "org.springdoc", name = "springdoc-openapi-webflux-ui", version = "1.6.8" }
springdocKotlin = { group = "org.springdoc", name = "springdoc-openapi-kotlin", version = "1.5.13" }
caffeine = { group = "com.github.ben-manes.caffeine", name = "caffeine", version.ref = "caffeine" }
reflections = { group = "org.reflections", name = "reflections", version = "0.9.12" }
mapstruct = { group = "org.mapstruct", name = "mapstruct", version = "1.3.1.Final" }
kmapKsp = { group = "io.icure", name = "kmap", version.ref = "kmap" }
bouncyCastleBcprov = { group = "org.bouncycastle", name = "bcprov-jdk15on", version.ref = "bouncyCastle" }
bouncyCastleBcmail = { group = "org.bouncycastle", name = "bcmail-jdk15on", version.ref = "bouncyCastle" }
jsonWebTokenApi = { group = "io.jsonwebtoken", name = "jjwt-api", version.ref = "jwt" }
jsonWebTokenImpl = { group = "io.jsonwebtoken", name = "jjwt-impl", version.ref = "jwt" }
jsonWebTokenJackson = { group = "io.jsonwebtoken", name = "jjwt-jackson", version.ref = "jwt" }
kotp = { group = "com.icure.kotp", name = "kotp", version = "1.0.1" } # 2FA
kotlinDateTime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version = "0.6.0-RC.2" }
betterParse = { group = "com.github.h0tk3y.betterParse", name = "better-parse", version = "0.4.4" }
libRecur = { group = "org.dmfs", name = "lib-recur", version = "0.13.0" }
kotlinxSerialization = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version = "1.6.2" }
googleApiClient = { group = "com.google.api-client", name = "google-api-client", version = "1.33.4" }
kotlinxSerializationPlugin = { group = "org.jetbrains.kotlin.plugin.serialization", name = "org.jetbrains.kotlin.plugin.serialization.gradle.plugin", version.ref = "kotlin" }
kotlinMultiplatformPlugin = { group = "org.jetbrains.kotlin.multiplatform", name = "org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
kotlinGradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
websocketCommons = { group = "com.icure", name = "kraken-websocket-common", version = "0.1.1-g2e7e958d75"}

[bundles]
springBootLibs = ["springBootWebflux", "springBootSecurity", "springBootActuator", "springBootCache"]
jacksonLibs = ["jacksonKotlin", "jacksonDatabind", "jacksonSmile", "jacksonJsr310"]
kotlinxCoroutinesLibs = ["kotlinxCoroutinesCore", "kotlinxCoroutinesJdk8", "kotlinxCoroutinesCoreJvm", "kotlinxCoroutinesReactive", "kotlinxCoroutinesReactor"]
kotestLibs = ["kotestAssertionsCore", "kotestRunnerJunit5", "kotestExtensionsSpring"]
hibernateValidatorLibs = ["hibernateValidator", "hibernateValidatorAnnotationProcessor", "hibernateValidatorCdi"]
springSecurityLibs = ["springSecurityMessaging"]
springLibs = ["springAspects", "springWebsocket", "springMessaging"]
krouchLibs = ["krouch", "asyncJacksonHttpClient"]
commonsLibs = ["commonsBeanUtils", "commonsIO", "apacheCommonsLang3", "apacheCommonsCompress", "apacheCommonsMath3", "taktikCommons", "apacheCommonsText"]
xmlLibs = ["activation"]
swaggerLibs = ["springdocWebflux", "springdocKotlin"]
bouncyCastleLibs = ["bouncyCastleBcprov", "bouncyCastleBcmail"]
jsonWebTokenLibs = ["jsonWebTokenApi", "jsonWebTokenImpl", "jsonWebTokenJackson"]

[plugins]
kotlin = { id = "org.jetbrains.kotlin", version.ref = "kotlin" }
kotlinAllOpen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlinSpring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
springBootPlugin = { id = "org.springframework.boot", version.ref = "springBoot" }
springBootDependenciesManagement = { id = "io.spring.dependency-management", version = "1.1.4" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
mavenRepository = { id = "com.taktik.gradle.maven-repository", version = "1.0.7" }
gitVersion = { id = "com.taktik.gradle.git-version", version = "2.0.8-gb47b2d0e35" }
helmRepository = { id = "com.taktik.gradle.helm-repository", version = "0.2.24-g9f69211aad" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
licenceReport = { id = "com.github.jk1.dependency-license-report", version = "2.0"}
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "12.1.0" }
gradleTestLogger = { id = "com.adarshr.test-logger", version  = "4.0.0" }
